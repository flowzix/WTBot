<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="butTaskAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="butTaskEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="butTaskRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="colId" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="colKeywords" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="colProgress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="colRun" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="dataAddress1" xml:space="preserve">
    <value>Address1</value>
  </data>
  <data name="dataAddress2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="dataCardExpire" xml:space="preserve">
    <value>Expires</value>
  </data>
  <data name="dataCardNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="dataCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="dataCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="dataCVV" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="dataEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="dataFullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="dataPostcode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="dataTel" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="tabSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="tabTasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="dataCard" xml:space="preserve">
    <value>Card details</value>
  </data>
  <data name="dataCardType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="dataPersonal" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="dataSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="dataClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="dataRef" xml:space="preserve">
    <value>Profile name</value>
  </data>
  <data name="taskInfoWindowName" xml:space="preserve">
    <value>Task data</value>
  </data>
  <data name="taskInfoCategory" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="taskInfoCheckoutDelay" xml:space="preserve">
    <value>Checkout delay</value>
  </data>
  <data name="taskInfoColor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="taskInfoProfile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="taskInfoSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="logAdding" xml:space="preserve">
    <value>Adding</value>
  </data>
  <data name="logCheckedOutSuc" xml:space="preserve">
    <value>Checked out successfully</value>
  </data>
  <data name="logFoundMatchingItem" xml:space="preserve">
    <value>Found matching item:</value>
  </data>
  <data name="logFoundTotalOf" xml:space="preserve">
    <value>Found total of</value>
  </data>
  <data name="logItemsIn" xml:space="preserve">
    <value>items in</value>
  </data>
  <data name="logLoadingData" xml:space="preserve">
    <value>Loading user data</value>
  </data>
  <data name="logLoadingDataFinished" xml:space="preserve">
    <value>User data loaded</value>
  </data>
  <data name="logStartedTaskWithId" xml:space="preserve">
    <value>Starting new task named </value>
  </data>
  <data name="logSuccessfullyAdded" xml:space="preserve">
    <value>Successfully added</value>
  </data>
  <data name="logToCart" xml:space="preserve">
    <value>to cart</value>
  </data>
  <data name="errorAddProfileFirst" xml:space="preserve">
    <value>Please add profile first. You can do that in settings.</value>
  </data>
  <data name="errorEnter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="errorSelectTaskFirst" xml:space="preserve">
    <value>Please select task first.</value>
  </data>
  <data name="logTaskRemoved" xml:space="preserve">
    <value>Task removed.</value>
  </data>
  <data name="errorNotFoundRefIn" xml:space="preserve">
    <value>Item was not found on the website. Refreshing in</value>
  </data>
  <data name="logStoppingThreadWithIt" xml:space="preserve">
    <value>Stopping task named </value>
  </data>
  <data name="toolTipCheckoutDelay" xml:space="preserve">
    <value>Number of miliseconds to wait before checkout. 2000 = 2seconds, 2500 = 2.5 seconds. We recommend you to check out atleast after 3 seconds, not to be recognized as bot.</value>
  </data>
  <data name="toolTipColor" xml:space="preserve">
    <value>Colorway of the item to be bought. Examples: 'yellow' or 'magneta'</value>
  </data>
  <data name="toolTipKeywords" xml:space="preserve">
    <value>Keywords separated with ',' signs, unambiguously identifying an item. Item name must contain every keyword given, to be bought. For example when you want to buy item named "Vibrations Corduroy Trucker Jacket" you can put "vibrations,corduroy"</value>
  </data>
  <data name="errorNoSizeAvailable" xml:space="preserve">
    <value>Selected size is not available. Aborting.</value>
  </data>
  <data name="errorCantSaveWithoutItems" xml:space="preserve">
    <value>You can't save a task without adding any items first.</value>
  </data>
  <data name="errorSelectItemFirst" xml:space="preserve">
    <value>Select item first.</value>
  </data>
  <data name="taskName" xml:space="preserve">
    <value>Task name</value>
  </data>
  <data name="errorProfileDoesntExist" xml:space="preserve">
    <value>Selected profile doesn't exist or might have been deleted. Edit task and select another one.</value>
  </data>
  <data name="logItemNotAvailable" xml:space="preserve">
    <value>This item is no longer available in this size/style</value>
  </data>
  <data name="logTryingToFindItem" xml:space="preserve">
    <value>Trying to find matching item</value>
  </data>
  <data name="errorNoCaptchasAvailable" xml:space="preserve">
    <value>No solved captchas are available to checkout.</value>
  </data>
  <data name="lProxyAddress" xml:space="preserve">
    <value>IP Address:port</value>
  </data>
  <data name="lProxyName" xml:space="preserve">
    <value>Proxy name</value>
  </data>
  <data name="lProxyPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="lProxyUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="tabProfiles" xml:space="preserve">
    <value>Profiles</value>
  </data>
  <data name="tabProxyAndSettings" xml:space="preserve">
    <value>Proxy/Settings</value>
  </data>
  <data name="labelRefreshFreq" xml:space="preserve">
    <value>Refresh interval</value>
  </data>
  <data name="labelSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="errorCardOrSoldOut" xml:space="preserve">
    <value>A card error occured or item was sold out.</value>
  </data>
  <data name="errorOccured" xml:space="preserve">
    <value>Error occured:</value>
  </data>
  <data name="errorProductKeyNotValid" xml:space="preserve">
    <value>Product key isn't valid.</value>
  </data>
  <data name="actSerialKeyLabel" xml:space="preserve">
    <value>Activation code</value>
  </data>
  <data name="actVerifyBut" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="actWinTitle" xml:space="preserve">
    <value>Provide activation code</value>
  </data>
  <data name="cardError" xml:space="preserve">
    <value>Card processing error occured</value>
  </data>
  <data name="checkoutError" xml:space="preserve">
    <value>Internal bot error (Too fast / Sold out / Captcha error )</value>
  </data>
</root>